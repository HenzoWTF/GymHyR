@page "/EditClientes/{Cedula}"
@inject ClientesServices ClientesServices
@using Services
@rendermode InteractiveServer
@inject NavigationManager NavigationManager

<PageTitle>Editar Cliente</PageTitle>

<EditForm Model="cliente" FormName="EditClienteForm">
    <DataAnnotationsValidator />
    <div class="card">
        <div class="card-header">
            <h1>Editar Cliente</h1>
        </div>
        <div class="card-body">
            <!-- Para la fecha -->
            <label class="form-label">Fecha</label>
            <InputDate @bind-Value="cliente.Fecha" class="form-control" />
            <ValidationMessage For="@(() => cliente.Fecha)" />

            <!-- Para el nombre -->
            <label class="form-label">Nombre</label>
            <InputText @bind-Value="cliente.Nombre" class="form-control" />
            <ValidationMessage For="@(() => cliente.Nombre)" />

            <!-- Para el correo electrónico -->
            <label class="form-label">Correo Electrónico</label>
            <InputText @bind-Value="cliente.Gmail" class="form-control" />
            <ValidationMessage For="@(() => cliente.Gmail)" />

            <!-- Para el teléfono -->
            <label class="form-label">Teléfono</label>
            <InputText @bind-Value="cliente.Telefono" class="form-control" />
            <ValidationMessage For="@(() => cliente.Telefono)" />
        </div>
        <div class="card-footer d-flex justify-content-center">
            <button type="submit" @onclick="Guardar" class="btn btn-outline-success"><i class="bi bi-pencil-square"></i> Guardar Cambios</button>
        </div>
    </div>
</EditForm>

@code {
    [Parameter]
    public string Cedula { get; set; }

    public Clientes cliente = new Clientes();

    protected override async Task OnInitializedAsync()
    {
        cliente = await ClientesServices.BuscarPorCedula(Cedula);
    }

    public async Task Guardar()
    {
        bool cedulaExistente = await ClientesServices.Existe(cliente.Cedula);

        if (cedulaExistente)
        {
            await ClientesServices.Modificar(cliente);
        }
        else
        {
            await ClientesServices.Insertar(cliente);
        }
        Volver();
    }
    void Volver()
    {
        NavigationManager.NavigateTo("/ClientesIndex");
    }
}