@page "/DeleteProductos/{Id:int}"
@using Library
@using GymHyR.Services
@inject ProductosServices productosService
@inject NavigationManager navigationManager
@inject NotificationService notificationServices
@inject IJSRuntime JSRuntime

@rendermode InteractiveAuto
<RadzenNotification/>
<PageTitle>Detalles del producto</PageTitle>
<div class="container">
    <div class="card shadow-lg">
        @*Header*@
        <div class="card-header">
            <h3><strong>Detalles del producto</strong></h3>
            <a href="/InventarioIndex" class="btn btn-outline-primary"><i class="bi bi-arrow-left" /></a>
        </div>
        @*Cuerpo*@
        <div class="card-body justify-content-center">
            <div class="row justify-content-center">
                <div class="col-8">
                    <div class="col-md-11 justify-content-center">
                        <h3 class="text-center"><strong>Datos del producto</strong></h3>
                        <div class="border-primmary border border-2 borde">
                            <div class="card-body">
                                <div class="row">
                                    @*Imagen*@
                                    <div class="col-5 justify-content-center">
                                        <div class="text-center">
                                            <img src="@GetImageSource()" alt="Imagen" class="img-fluid img-thumbnail" style="width: auto; height: auto;">
                                        </div>
                                    </div>
                                    @*Datos del proveedor*@
                                    <div class="col-7">
                                        <ul class="list-unstyled" style="margin-top: 50px; margin-bottom: 50px;">
                                            <li><strong>ProveedorId:</strong> @productos.ProductoId</li>
                                            <li><strong>FechaCreaci&oacute;n:</strong> @productos.FechaCreacion.ToShortDateString()</li>
                                            <li><strong>Nombre:</strong> @productos.Nombre</li>
                                            <li><strong>Descripci&oacute;n:</strong> @productos.Descripcion</li>
                                            <li><strong>Precio de Venta:</strong> @productos.PrecioVenta</li>
                                            <li><strong>Precio de Compra:</strong> @productos.PrecioCompra</li>
                                            <li><strong>Cantidad en almacen:</strong> @productos.Cantidad</li>
                                        </ul>
                                    </div>
                                </div>

                                <div class="card-footer d-flex justify-content-center mt-3">
                                    <div class="btn-group">
                                        <a href="/InventarioIndex" class="btn btn-outline-primary"><i class="bi bi-arrow-left" />Volver</a>
                                        <button type="button" class="btn btn-outline-danger" @onclick="ConfirmarEliminar"><i class="bi bi-trash-fill" /> Eliminar</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>



@code {
    [Parameter]
    public int Id { get; set; }
    private Productos productos { get; set; } = new Productos();

    protected override async Task OnInitializedAsync()
    {
        if (Id > 0)
        {
            productos = await productosService.GetProducto(Id);
        }
    }

    private async Task Eliminar()
    {
        if (Id != 0)
        {
            await productosService.DeleteProducto(Id);
            var Mensaje = new NotificationMessage
                {
                    Severity = NotificationSeverity.Error,
                    Summary = "Eliminacion exitosa",
                    Detail = "Se a borrado el producto",
                    Duration = 1_000
                };
            notificationServices.Notify(Mensaje);
            await Task.Delay(1000);
            navigationManager.NavigateTo("/InventarioIndex");
        }
    }

    private async Task ConfirmarEliminar()
    {
        bool confirmacion = await JSRuntime.InvokeAsync<bool>("confirm", "¿Está seguro de que desea eliminar este proveedor?");
        if (confirmacion)
        {
            await Eliminar();
        }
    }

    public string GetImageSource()
    {
        if (productos.Foto != null && productos.Foto.Length > 0)
        {
            return $"data:image;base64,{Convert.ToBase64String(productos.Foto)}";
        }
        return null;
    }
}