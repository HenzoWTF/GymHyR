@page "/ViewCompra/{Id:int}"
@using Library
@using Microsoft.AspNetCore.Components.Forms
@using Microsoft.AspNetCore.Components.Web
@using GymHyR.Services
@rendermode InteractiveServer
@inject ComprasServices comprasServices
@inject ProveedoresServices proveedoresServices
@inject ProductosServices productosServices
@inject NavigationManager navigationManager
@inject NotificationService notificationServices
@inject IJSRuntime JSRuntime

<RadzenNotification />
<PageTitle>View Compra</PageTitle>

<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card shadow-lg">
                <!-- Header -->
                <div class="card-header">
                    <h3><strong>View Compra</strong></h3>
                    <a href="/CompraIndex" class="btn btn-outline-primary"><i class="bi bi-arrow-left"></i></a>
                </div>
                <!-- Body -->
                <div class="card-body">
                    <!-- Datos de la compra -->
                    <div class="col-md-11 mx-auto">
                        <h3 class="text-center"><strong>Datos de la compra</strong></h3>
                        <div class="border-primmary border border-2 borde">
                            <div class="card-body">
                                <ul class="list-unstyled" style="margin-top: 20px; margin-bottom: 20px;">
                                    <li><strong>ProveedorId:</strong> @Compras.CompraId</li>
                                    <li><strong>FechaCreacion:</strong> @Compras.FecheDeCompra.ToShortDateString()</li>
                                </ul>
                            </div>
                        </div>
                    </div>
                    <!-- Productos -->
                    <div class="col-md-11 mx-auto">
                        <h3 class="text-center"><strong>Productos</strong></h3>
                        @if (Compras.CompraDetalles.Count > 0)
                        {
                            <table class="table table-bordered miTabla">
                                <thead>
                                    <tr>
                                        <th>Producto</th>
                                        <th>Cantidad</th>
                                        <th>Precio Compra</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var detalle in Compras.CompraDetalles)
                                    {
                                        <tr>
                                            <td>@ObtenerProducto(detalle.ProductoId)</td>
                                            <td>@detalle.Cantidad</td>
                                            <td>@detalle.PrecioCompra</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                            <p><strong>Total de compras: </strong>@Compras.CompraDetalles.Count</p>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


@code {


	[Parameter]
	public int Id { get; set; }
	private Compra Compras { get; set; } = new Compra();
	public IEnumerable<Contactos> contactos = new List<Contactos>();
	public IEnumerable<Proveedores> proveedores = new List<Proveedores>();
	public IEnumerable<Productos> Productos = new List<Productos>();

	protected override async Task OnInitializedAsync()
	{
		if (Id > 0)
		{
			Productos = await productosServices.GetProductos();
			Compras = await comprasServices.GetCompra(Id);
			proveedores = await proveedoresServices.GetProveedores();

		}
	}

	public string ObtenerProducto(int id)
	{
		var dato = Productos.FirstOrDefault(c => c.ProductoId == id);

		return dato.Nombre;
	}
}
