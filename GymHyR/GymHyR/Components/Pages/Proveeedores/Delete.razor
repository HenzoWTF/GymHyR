@page "/DeleteProveedor/{Id:int}"
@using Library
@using GymHyR.Services
@inject ProveedoresServices ProveedoresServices
@inject NavigationManager navigationManager
@inject ContactosServices contactosServices
@rendermode InteractiveAuto
@inject NotificationService notificationServices

<RadzenNotification />
<PageTitle>Eliminar Proveedor</PageTitle>

<div class="container">
	<div class="card shadow-lg">
		@*Header*@
		<div class="card-header">
			<h3><strong>Eliminar Proveedor</strong></h3>
			<a href="/ProveedoresIndex" class="btn btn-outline-primary"><i class="bi bi-arrow-left" /></a>
		</div>
		@*Cuerpo*@
		<div class="card-body">
			<div class="row">
				<div class="col-8">
					<div class="col-md-11">
						<h3 class="text-center"><strong>Datos del Proveedor</strong></h3>
						<div class="border-primmary border border-2 borde">
							<div class="card-body">
								<div class="row">
									@*Imagen*@
									<div class="col-5">
										<div class="text-center">
											<img src="@GetImageSource()" alt="Imagen" class="img-fluid img-thumbnail" style="width: auto; height: auto;">
										</div>
									</div>

									@*Datos del proveedor*@
									<div class="col-7">
										<ul class="list-unstyled" style="margin-top: 20px; margin-bottom: 20px;">
											<li><strong>ProveedorId:</strong> @proveedor.ProveedorId</li>
											<li><strong>FechaCreacion:</strong> @proveedor.FechaCreacion.ToShortDateString()</li>
											<li><strong>Nombre:</strong> @proveedor.Nombre</li>
											<li><strong>Dirección:</strong> @proveedor.Direccion</li>
											<li><strong>Email:</strong> @proveedor.Email</li>
											<li><strong>RNC:</strong> @proveedor.RNC</li>
										</ul>
									</div>
								</div>
							</div>
						</div>
					</div>
				</div>
				@*Detalles del proveedor*@
				<div class="col-4">
					<h3 class="text-center"><strong>Contactos</strong></h3>
					<fieldset class="border-primmary border border-2 borde">
						<div class="card-body">
							<section>
								<section>
									@if (proveedor.ProveedoresDetalle.Count > 0)
									{
										@*Table Detalles*@
										<table class="table table-bordered miTabla">
											<thead>
												<tr>
													<th>Tipo de Contacto</th>
													<th>Contacto</th>
												</tr>
											</thead>
											<tbody>
												@foreach (var detalle in proveedor.ProveedoresDetalle)
												{
													<tr>
														<td>@ObtenerTipoContacto(detalle.ContactoId)</td>
														<td>@detalle.Contacto</td>
													</tr>
												}
											</tbody>
										</table>
										<p><strong>Total de Detalles: </strong>@proveedor.ProveedoresDetalle.Count</p>
									}
								</section>
							</section>
						</div>
					</fieldset>
				</div>
			</div>
		</div>


		<div class="card-footer d-flex justify-content-center mt-3">
			<div class="btn-group">
				<a href="/ProveedoresIndex" class="btn btn-outline-primary"><i class="bi bi-arrow-left" /></a>
				@* <button type="button" class="btn btn-danger" @onclick="Eliminar"><i class="bi bi-trash-fill" /> Eliminar</button> *@

				<button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#exampleModal">
					Launch demo modal
				</button>


			</div>
		</div>
	</div>
</div>



<div class="modal fade" id="exampleModalCenter" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
	<div class="modal-dialog modal-dialog-centered" role="document">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title" id="exampleModalLongTitle">Modal title</h5>
				<button type="button" class="close" data-dismiss="modal" aria-label="Close">
					<span aria-hidden="true">&times;</span>
				</button>
			</div>
			<div class="modal-body">
				...
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
				<button type="button" class="btn btn-danger" @onclick="Eliminar"><i class="bi bi-trash-fill" /> Eliminar</button>
			</div>
		</div>
	</div>
</div>


@code {


	[Parameter]
	public int Id { get; set; }
	private Proveedores proveedor { get; set; } = new Proveedores();
	public IEnumerable<Contactos> contactos = new List<Contactos>();

	protected override async Task OnInitializedAsync()
	{
		if (Id > 0)
		{
			proveedor = await ProveedoresServices.GetProveedor(Id);
			contactos = await contactosServices.GetContactos();

		}
	}

	private async Task Eliminar()
	{
		if (Id != 0)
		{
			await ProveedoresServices.DeleteProvedores(Id);
			var Mensaje = new NotificationMessage
				{
					Severity = NotificationSeverity.Error,
					Summary = "Eliminacion exitosa",
					Detail = "Se a borrado el producto",
					Duration = 1_000
				};
			notificationServices.Notify(Mensaje);
			await Task.Delay(1000);
			navigationManager.NavigateTo("/ProveedoresIndex");
		}
	}

	public string ObtenerTipoContacto(int id)
	{
		var dato = contactos.FirstOrDefault(c => c.ContactoId == id);

		return dato.Descripcion;
	}


	public string GetImageSource()
	{
		if (proveedor.Foto != null && proveedor.Foto.Length > 0)
		{
			return $"data:image;base64,{Convert.ToBase64String(proveedor.Foto)}";
		}
		return null;
	}

}
