// <auto-generated />
using System;
using GymHyR.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GymHyR.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20240327211753_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.3");

            modelBuilder.Entity("Library.Models.Clientes", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Cedula")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("TEXT");

                    b.Property<string>("Gmail")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ClienteId");

                    b.ToTable("Clientes");

                    b.HasData(
                        new
                        {
                            ClienteId = 1,
                            Cedula = "123",
                            Fecha = new DateTime(2024, 3, 27, 0, 0, 0, 0, DateTimeKind.Local),
                            Gmail = "Vencida",
                            Nombre = "Génerico",
                            Telefono = "Diario"
                        });
                });

            modelBuilder.Entity("Library.Models.EstadoMembresias", b =>
                {
                    b.Property<int>("EstadoMembresiaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .HasColumnType("TEXT");

                    b.HasKey("EstadoMembresiaId");

                    b.ToTable("EstadoMembresias");

                    b.HasData(
                        new
                        {
                            EstadoMembresiaId = 1,
                            Descripcion = "Activa"
                        },
                        new
                        {
                            EstadoMembresiaId = 2,
                            Descripcion = "Vencida"
                        });
                });

            modelBuilder.Entity("Library.Models.Membresias", b =>
                {
                    b.Property<int>("MembresiaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClienteId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EstadoMembresiaId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("FechaFechaFin")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("TEXT");

                    b.Property<int>("TipoMembresiaId")
                        .HasColumnType("INTEGER");

                    b.HasKey("MembresiaId");

                    b.HasIndex("ClienteId");

                    b.HasIndex("EstadoMembresiaId");

                    b.HasIndex("TipoMembresiaId");

                    b.ToTable("Membresias");
                });

            modelBuilder.Entity("Library.Models.TipoMembresias", b =>
                {
                    b.Property<int>("TipoMembresiaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .HasColumnType("TEXT");

                    b.Property<int>("DiasDuracion")
                        .HasColumnType("INTEGER");

                    b.HasKey("TipoMembresiaId");

                    b.ToTable("TipoMembresias");

                    b.HasData(
                        new
                        {
                            TipoMembresiaId = 1,
                            Descripcion = "Mensual",
                            DiasDuracion = 30
                        },
                        new
                        {
                            TipoMembresiaId = 2,
                            Descripcion = "Semanal",
                            DiasDuracion = 5
                        },
                        new
                        {
                            TipoMembresiaId = 3,
                            Descripcion = "Diario",
                            DiasDuracion = 1
                        });
                });

            modelBuilder.Entity("Library.Models.Membresias", b =>
                {
                    b.HasOne("Library.Models.Clientes", null)
                        .WithMany("Membresias")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Library.Models.EstadoMembresias", null)
                        .WithMany("Membresias")
                        .HasForeignKey("EstadoMembresiaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Library.Models.TipoMembresias", null)
                        .WithMany("Membresias")
                        .HasForeignKey("TipoMembresiaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Library.Models.Clientes", b =>
                {
                    b.Navigation("Membresias");
                });

            modelBuilder.Entity("Library.Models.EstadoMembresias", b =>
                {
                    b.Navigation("Membresias");
                });

            modelBuilder.Entity("Library.Models.TipoMembresias", b =>
                {
                    b.Navigation("Membresias");
                });
#pragma warning restore 612, 618
        }
    }
}
